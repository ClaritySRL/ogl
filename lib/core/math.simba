function int32.abs():int32;
  begin exit(result:=(self+(self shr 31)) xor (self shr 31));end;

function single.abs():single;
  begin
    result:=self;
    if result<0 then
      result:=-result;
    exit(result);
  end;

function shortestDegrees(funcStart,funcEnd:int32):int32;
  begin
    if ((result:=funcEnd-funcStart)+(result shr 31)) xor (result shr 31)<180 then
      exit()
    else if funcStart<funcEnd then
      result:=result-360
    else
      result:=result+360;
    exit(result);
  end;

function shortestDegrees(funcStart,funcEnd:single):single;overload;
  begin
    if (result:=funcEnd-funcStart).abs()<180 then
      exit()
    else if funcStart<funcEnd then
      result:=result-360
    else
      result:=result+360;
    exit(result);
  end;
